<UserControl x:Class="WpfDemo.Views.ToDoView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WpfDemo.Views"
             xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="600"
             Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}">
    <md:DialogHost>
        <md:DrawerHost IsRightDrawerOpen="{Binding IsRightDrawerOpen}">
            <md:DrawerHost.RightDrawerContent>
                <DockPanel Width="230" LastChildFill="False">
                    <StackPanel Orientation="Vertical" DockPanel.Dock="Top">
                        <TextBlock Text="添加待办" FontSize="15" FontWeight="Bold" Padding="20,10" HorizontalAlignment="Center"/>
                        <StackPanel DockPanel.Dock="Top" Margin="10" Orientation="Horizontal">
                            <TextBlock Text="状态:" FontSize="13" VerticalAlignment="Center"></TextBlock>
                            <ComboBox Width="180" SelectedIndex="{Binding CurrenToDo.Status,NotifyOnSourceUpdated=True, Mode=TwoWay}">
                                <ComboBoxItem>待办</ComboBoxItem>
                                <ComboBoxItem>已完成</ComboBoxItem>
                            </ComboBox>
                        </StackPanel>
                    </StackPanel>
                    <TextBox DockPanel.Dock="Top" Margin="0,20" Width="200" Text="{Binding CurrenToDo.Title, NotifyOnSourceUpdated=True, Mode=TwoWay}" md:HintAssist.Hint="请输入待办概要" md:TextFieldAssist.HasClearButton="True"></TextBox>
                    <TextBox DockPanel.Dock="Top" Margin="0,20" Width="200" Text="{Binding CurrenToDo.Content,NotifyOnSourceUpdated=True, Mode=TwoWay}" md:HintAssist.Hint="请输入待办内容" md:TextFieldAssist.HasClearButton="True"></TextBox>
                    <Button Content="保存" Margin="0,20" DockPanel.Dock="Top" Command="{Binding ExcuteCommand}" CommandParameter="保存"></Button>
                </DockPanel>
            </md:DrawerHost.RightDrawerContent>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"></RowDefinition>
                    <RowDefinition></RowDefinition>
                </Grid.RowDefinitions>
                <StackPanel Margin="15,0,0,0" Orientation="Horizontal">
                    <TextBox Width="250" md:HintAssist.Hint="查找待办事项..." Text="{Binding Search, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" md:TextFieldAssist.HasClearButton="True" Height="30">

                        <TextBox.InputBindings>
                            <KeyBinding Key="Enter" Command="{Binding ExcuteCommand}" CommandParameter="查询"></KeyBinding>
                        </TextBox.InputBindings>
                    </TextBox>
                    <TextBlock Text="筛选" Margin="10,0" VerticalAlignment="Center" ></TextBlock>
                    <ComboBox SelectedIndex="{Binding SelectIndex}">
                        <ComboBoxItem>全部</ComboBoxItem>
                        <ComboBoxItem>待办</ComboBoxItem>
                        <ComboBoxItem>已完成</ComboBoxItem>
                    </ComboBox>
                </StackPanel>
                <Button HorizontalAlignment="Right" Margin="10,5" Content="+添加待办" CommandParameter="新增" Command="{Binding ExcuteCommand}"></Button>
                <ScrollViewer Grid.Row="1" >
                    <ItemsControl ItemsSource="{Binding ToDoDtos}" HorizontalAlignment="Center" Margin="0,5">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel></WrapPanel>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <md:TransitioningContent OpeningEffect="{md:TransitionEffect Kind=ExpandIn}">
                                    <Grid MinHeight="180" Width="220" MaxHeight="250" Margin="8,0">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="auto"></RowDefinition>
                                            <RowDefinition></RowDefinition>
                                        </Grid.RowDefinitions>
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="MouseLeftButtonUp">
                                                <i:InvokeCommandAction CommandParameter="{Binding }" Command="{Binding DataContext.SelectedCommand,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}}">
                                                </i:InvokeCommandAction>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                        <md:PopupBox HorizontalAlignment="Right" Panel.ZIndex="1">
                                            <Button Content="删除" CommandParameter="{Binding }" Command="{Binding DataContext.DeleteCommand,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}}"></Button>
                                        </md:PopupBox>
                                        <Border CornerRadius="3" Grid.RowSpan="2">
                                            <Border.Style>
                                                <Style TargetType="Border">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Status}" Value="1">
                                                            <Setter Property="Background" Value="#3CB371"></Setter>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Status}" Value="2">
                                                            <Setter Property="Background" Value="#1E98FF"></Setter>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                        </Border>
                                        <TextBlock  Margin="10,5" Text="{Binding Title}" FontWeight="Bold"></TextBlock>
                                        <TextBlock Margin="10,5" Text="{Binding Content}" Grid.Row="1"></TextBlock>
                                        <Canvas ClipToBounds="True" Grid.RowSpan="2">
                                            <Border Canvas.Top="10" CornerRadius="100" Canvas.Right="-50" Width="120" Height="120" Background="#FFFFFFFF" Opacity="0.1"></Border>
                                            <Border Canvas.Top="80" CornerRadius="100" Canvas.Right="-30" Width="120" Height="120" Background="#FFFFFFFF" Opacity="0.1">
                                            </Border>
                                        </Canvas>
                                    </Grid>
                                </md:TransitioningContent>
                               
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </ScrollViewer>
               
            </Grid>
        </md:DrawerHost>
    </md:DialogHost>
</UserControl>
